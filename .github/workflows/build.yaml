name: Build

on:
  push:
  pull_request:

permissions:
  contents: write

jobs:
  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Create release
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
        run: |
          gh release create "$tag" \
              --repo="$GITHUB_REPOSITORY" \
              --title="$tag" \
              --generate-notes

  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            output-name: tuxshare-x86_64-linux
          - os: windows-latest
            output-name: tuxshare-x86_64-windows.exe

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Dart
        uses: dart-lang/setup-dart@v1

      - name: Fetch dependencies
        run: |
          dart pub get

      - name: Build
        run: |
          mkdir build
          dart compile exe bin/tuxshare.dart -v -o build/${{ matrix.output-name }}

      - name: Upload workflow artifacts
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/heads/')
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.output-name }}
          path: build/${{ matrix.output-name }}

      - name: Upload assets
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload "${{ github.ref_name }}" build/* --repo="$GITHUB_REPOSITORY"
